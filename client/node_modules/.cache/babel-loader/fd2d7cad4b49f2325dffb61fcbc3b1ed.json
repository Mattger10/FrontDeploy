{"ast":null,"code":"// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//     getVideogames,\n//     filterByGenres,\n//     getGenres,\n//     filterCreated,\n//     orderByRating,\n//     sortAlphabetically,\n//     orderByName,\n//     sortByRating,\n// } from \"../redux/actions\"\n// import { Link } from \"react-router-dom\";\n// import Card from \"./Card\";\n// import Paginado from \"./Paginado\";\n// import SearchBar from \"./SearchBar\";\n// import Loading from \"./Loading\";\n// import NotFound from \"./NotFound\";\n// //IMPORTAR ESTILOS\n\n// export default function Home() {\n//   const dispatch = useDispatch();\n//   const allVideogames = useSelector((state) => state.videogames);\n//   const allgenres = useSelector((state) => state.allgenres);\n//   const [loading, setLoading] = useState(true);\n//   const [header, setHeader] = useState(\"Explore all the Games\");\n//   const [order, setOrder] = useState(\"\");\n//   const [setOrdenRating] = useState(\"\");\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [videogamePerPage] = useState(15);\n//   const indexOfLastVideogame = currentPage * videogamePerPage;\n//   const indexOfFirtsVideogame = indexOfLastVideogame - videogamePerPage;\n//   const currentVideogame = allVideogames.slice(\n//     indexOfFirtsVideogame,\n//     indexOfLastVideogame\n//   );\n\n//   useEffect(() => {\n//     if(allVideogames.length > 0 ){\n//       setLoading(!loading)\n//     }\n//   }, [allVideogames, loading]) \n\n//   const paginado = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n\n//   if (allVideogames.length > 0 && loading) {\n//     setLoading(false);\n//   }\n\n//   useEffect(() => {\n//     dispatch(getVideogames());\n//     dispatch(getGenres());\n//   }, [dispatch]);\n\n//   function handleClick(element) {\n//     element.preventDefault();\n//     dispatch(getVideogames());\n//   }\n\n//   function handlePrev(element) {\n//     element.preventDefault();\n//     setCurrentPage(currentPage - 1);\n//   }\n\n//   function handleNext(element) {\n//     element.preventDefault();\n//     setCurrentPage(currentPage + 1);\n//   }\n\n//   function handleFilterGenres(element) {\n//     dispatch(filterByGenres(element.target.value));\n//     setCurrentPage(1);\n//   }\n//   function handleFilterCreated(element) {\n//     element.preventDefault();\n//     dispatch(filterCreated(element.target.value)); //PARA CREAR UN NUEVO JUEGO\n//   }\n//   function handleRatingSort(e) {\n//     e.preventDefault();\n//     dispatch(sortByRating(e.target.value));\n//     setCurrentPage(1);\n//     setOrder(`Sorted by: ${e.target.value}`);\n//     setHeader(`Sorted by: ${e.target.value}`);\n//   }\n// //ERROR EN CONSOLA A VERIFICAR\n//   function handleSort(element) {\n//     element.preventDefault();\n//     dispatch(sortAlphabetically(element.target.value));\n//     setCurrentPage(1);\n//     setOrder(`Sorted by: ${element.target.value}`);\n//     setHeader(`Sorted by: ${element.target.value}`);\n//   }\n//   return (\n//     <div id=\"HomeGeneral\" >\n//       <h1>Mattger GAMES</h1>\n//       <h1 id=\"titulo\">Elige tu juego!</h1>\n//       <Link to=\"/videogames\">\n//         <button id=\"btnCrear\">Crear juego nuevo</button>\n//       </Link>\n//       <button onClick={element => {handleClick(element)}}>\n//         Recargar juegos\n//       </button>\n//       <div>\n//         <SearchBar />\n//         <div onChange={(element) => handleFilterGenres(element)}>\n//           <select>\n//             <option value=\"todos\">Todos los géneros</option>\n//             {allgenres?.map((element) => {\n//               return (\n//                 <option key={element.id} value={element.value}>\n//                   {element.name}\n//                 </option>\n//               );\n//             })}\n//           </select>\n//         </div>\n//         <select onChange={(element) => handleSort(element)}>\n//           <option>Orden </option>\n//           <option value=\"asc\">Ascendente </option>\n//           <option value=\"desc\">Descendente</option>\n//         </select>\n//         <select\n//           onChange={(element) => handleRatingSort(element)}>\n//           <option value=\"rating\">Select Rating</option>\n//           <option value=\"least\">Menos Popular</option>\n//           <option value=\"more\">Más Popular</option>\n//         </select>\n//         <select id=\"select\" onChange={(e) => handleFilterCreated(e)}>\n//           <option value=\"All\">Todos los videos juegos</option>\n//           <option value=\"existente\">Existente</option>\n//           <option value=\"creados\">Creados</option>\n//         </select>\n\n//             { allVideogames?.map((element) =>{\n//               return (\n//                 <fragment className=\"juegos\">\n//                   <Link to={\"/home\" + element.id}>\n//                 <Card\n//                   key={element.id}\n//                   id={element.id}\n//                   name={element.name}\n//                   image={\n//                     element.image ? element.image : element.background_image\n//                   }\n//                   genres={element.genres}\n//                   rating={element.rating}\n//                   platforms={element.platforms}\n//                   released={element.released}\n//                   description={element.description}\n//                 />\n//                 </Link>\n//               </fragment>\n//               );\n//             })}\n\n//         <Paginado\n//           videogamePerPage={videogamePerPage}\n//           allVideogames={allVideogames.length}\n//           paginado={paginado}\n//           currentPage={currentPage}\n//         />\n//         <button\n//           id=\"pag\"\n//           onClick={(element) => handlePrev(element)}\n//           disabled={currentPage <= 1}\n//         >\n//           {\" \"}\n//           Prev{\" \"}\n//         </button>\n\n//         <button\n//           id=\"pag\"\n//           onClick={(element) => handleNext(element)}\n//           disabled={currentVideogame.length < 15}\n//         >\n//           {\" \"}\n//           Next{\" \"}\n//         </button>\n//       </div>\n//     </div> \n//   )}\n\n// import React from \"react\";\n// import { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getVideogames, filterVideogamesBySatatus } from \"../redux/actions\";\n// import { Link } from 'react-router-dom';\n// import Card from \"./Card\";\n// import Paginado from \"./Paginado\";\n\n// export default function Home (){\n\n// const dispatch = useDispatch()\n// const allVideogames = useSelector ((state) => state.allVideogames)\n// const [currentPage, setCurrentPage] = useState(1)\n// const [videogamePerPage, setVideogamePerPage] = useState (20) //Controla cuántos videojugos se muestran por página\n// const indexOfLastVideogame = currentPage * videogamePerPage\n// const indexOfFirtsVideogame = indexOfLastVideogame - videogamePerPage\n// const currentVideogames = allVideogames.slice(indexOfFirtsVideogame, indexOfLastVideogame)\n\n// const paginado = (pageNumber) => {\n//   setCurrentPage(pageNumber)\n// }\n\n// useEffect (() => {\n//   dispatch(getVideogames());\n// },[dispatch])\n\n// function handleClick(element){\n//   element.preventDefault();\n//   dispatch(getVideogames());\n// }\n\n// function handleFilterStatus(e){\n//   dispatch(filterVideogamesBySatatus(e.target.value))\n// }\n\n// function handleFilterCreated{}\n\n// return (\n//   <div>\n//     <Link to='/videogames'>Crea tu videojuego</Link>\n//     <h1>Mattger GAMES</h1>\n//    <button onClick={element => {handleClick(element)}}>\n//     Recargar todos los juegos\n//     </button>\n//     <div>\n//       <select>\n//         <option value=\"asc\">Ascendente</option>\n//         <option value=\"desc\">Descendente</option>\n//       </select>\n//       <select>\n//         <option value=\"rating\">Select Rating</option>\n//         <option value=\"least\">Menos Popular</option>\n//         <option value=\"more\">Más Popular</option>\n//       </select>\n//       <select onChange={e => handleFilterStatus(e)}>\n//         <option value=\"All\">Todos los videos juegos</option>\n//         <option value=\"Existente\">Existentes</option>\n//         <option value=\"Creados\">Creados</option>\n//       </select>\n//       <Paginado\n//       videogamesPerPage={videogamePerPage}\n//       allVideogames={allVideogames.length}\n//       paginado = {paginado}\n//       />\n//       {currentVideogames?.map((videogame) => {\n//         return (\n//           <div>\n//             <Link to={\"/home/\" + videogame.id}>\n//               <Card  image={videogame.image}\n//                         name={videogame.name}\n//                         rating={videogame.rating}\n//                         genres={videogame.genres}/>\n//             </Link>\n//           </div>\n//         )\n//       })}\n//     </div>\n//     </div>\n\n// )\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Matia/OneDrive/Escritorio/PI-Videogames-main/PI-Videogames-main/client/src/components/Home.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//     getVideogames,\r\n//     filterByGenres,\r\n//     getGenres,\r\n//     filterCreated,\r\n//     orderByRating,\r\n//     sortAlphabetically,\r\n//     orderByName,\r\n//     sortByRating,\r\n// } from \"../redux/actions\"\r\n// import { Link } from \"react-router-dom\";\r\n// import Card from \"./Card\";\r\n// import Paginado from \"./Paginado\";\r\n// import SearchBar from \"./SearchBar\";\r\n// import Loading from \"./Loading\";\r\n// import NotFound from \"./NotFound\";\r\n// //IMPORTAR ESTILOS\r\n\r\n// export default function Home() {\r\n//   const dispatch = useDispatch();\r\n//   const allVideogames = useSelector((state) => state.videogames);\r\n//   const allgenres = useSelector((state) => state.allgenres);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [header, setHeader] = useState(\"Explore all the Games\");\r\n//   const [order, setOrder] = useState(\"\");\r\n//   const [setOrdenRating] = useState(\"\");\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [videogamePerPage] = useState(15);\r\n//   const indexOfLastVideogame = currentPage * videogamePerPage;\r\n//   const indexOfFirtsVideogame = indexOfLastVideogame - videogamePerPage;\r\n//   const currentVideogame = allVideogames.slice(\r\n//     indexOfFirtsVideogame,\r\n//     indexOfLastVideogame\r\n//   );\r\n\r\n  \r\n//   useEffect(() => {\r\n//     if(allVideogames.length > 0 ){\r\n//       setLoading(!loading)\r\n//     }\r\n//   }, [allVideogames, loading]) \r\n\r\n//   const paginado = (pageNumber) => {\r\n//     setCurrentPage(pageNumber);\r\n//   };\r\n\r\n//   if (allVideogames.length > 0 && loading) {\r\n//     setLoading(false);\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getVideogames());\r\n//     dispatch(getGenres());\r\n//   }, [dispatch]);\r\n\r\n//   function handleClick(element) {\r\n//     element.preventDefault();\r\n//     dispatch(getVideogames());\r\n//   }\r\n\r\n//   function handlePrev(element) {\r\n//     element.preventDefault();\r\n//     setCurrentPage(currentPage - 1);\r\n//   }\r\n\r\n//   function handleNext(element) {\r\n//     element.preventDefault();\r\n//     setCurrentPage(currentPage + 1);\r\n//   }\r\n\r\n//   function handleFilterGenres(element) {\r\n//     dispatch(filterByGenres(element.target.value));\r\n//     setCurrentPage(1);\r\n//   }\r\n//   function handleFilterCreated(element) {\r\n//     element.preventDefault();\r\n//     dispatch(filterCreated(element.target.value)); //PARA CREAR UN NUEVO JUEGO\r\n//   }\r\n//   function handleRatingSort(e) {\r\n//     e.preventDefault();\r\n//     dispatch(sortByRating(e.target.value));\r\n//     setCurrentPage(1);\r\n//     setOrder(`Sorted by: ${e.target.value}`);\r\n//     setHeader(`Sorted by: ${e.target.value}`);\r\n//   }\r\n// //ERROR EN CONSOLA A VERIFICAR\r\n//   function handleSort(element) {\r\n//     element.preventDefault();\r\n//     dispatch(sortAlphabetically(element.target.value));\r\n//     setCurrentPage(1);\r\n//     setOrder(`Sorted by: ${element.target.value}`);\r\n//     setHeader(`Sorted by: ${element.target.value}`);\r\n//   }\r\n//   return (\r\n//     <div id=\"HomeGeneral\" >\r\n//       <h1>Mattger GAMES</h1>\r\n//       <h1 id=\"titulo\">Elige tu juego!</h1>\r\n//       <Link to=\"/videogames\">\r\n//         <button id=\"btnCrear\">Crear juego nuevo</button>\r\n//       </Link>\r\n//       <button onClick={element => {handleClick(element)}}>\r\n//         Recargar juegos\r\n//       </button>\r\n//       <div>\r\n//         <SearchBar />\r\n//         <div onChange={(element) => handleFilterGenres(element)}>\r\n//           <select>\r\n//             <option value=\"todos\">Todos los géneros</option>\r\n//             {allgenres?.map((element) => {\r\n//               return (\r\n//                 <option key={element.id} value={element.value}>\r\n//                   {element.name}\r\n//                 </option>\r\n//               );\r\n//             })}\r\n//           </select>\r\n//         </div>\r\n//         <select onChange={(element) => handleSort(element)}>\r\n//           <option>Orden </option>\r\n//           <option value=\"asc\">Ascendente </option>\r\n//           <option value=\"desc\">Descendente</option>\r\n//         </select>\r\n//         <select\r\n//           onChange={(element) => handleRatingSort(element)}>\r\n//           <option value=\"rating\">Select Rating</option>\r\n//           <option value=\"least\">Menos Popular</option>\r\n//           <option value=\"more\">Más Popular</option>\r\n//         </select>\r\n//         <select id=\"select\" onChange={(e) => handleFilterCreated(e)}>\r\n//           <option value=\"All\">Todos los videos juegos</option>\r\n//           <option value=\"existente\">Existente</option>\r\n//           <option value=\"creados\">Creados</option>\r\n//         </select>\r\n\r\n//             { allVideogames?.map((element) =>{\r\n//               return (\r\n//                 <fragment className=\"juegos\">\r\n//                   <Link to={\"/home\" + element.id}>\r\n//                 <Card\r\n//                   key={element.id}\r\n//                   id={element.id}\r\n//                   name={element.name}\r\n//                   image={\r\n//                     element.image ? element.image : element.background_image\r\n//                   }\r\n//                   genres={element.genres}\r\n//                   rating={element.rating}\r\n//                   platforms={element.platforms}\r\n//                   released={element.released}\r\n//                   description={element.description}\r\n//                 />\r\n//                 </Link>\r\n//               </fragment>\r\n//               );\r\n//             })}\r\n\r\n//         <Paginado\r\n//           videogamePerPage={videogamePerPage}\r\n//           allVideogames={allVideogames.length}\r\n//           paginado={paginado}\r\n//           currentPage={currentPage}\r\n//         />\r\n//         <button\r\n//           id=\"pag\"\r\n//           onClick={(element) => handlePrev(element)}\r\n//           disabled={currentPage <= 1}\r\n//         >\r\n//           {\" \"}\r\n//           Prev{\" \"}\r\n//         </button>\r\n\r\n//         <button\r\n//           id=\"pag\"\r\n//           onClick={(element) => handleNext(element)}\r\n//           disabled={currentVideogame.length < 15}\r\n//         >\r\n//           {\" \"}\r\n//           Next{\" \"}\r\n//         </button>\r\n//       </div>\r\n//     </div> \r\n//   )}\r\n  \r\n// import React from \"react\";\r\n// import { useState, useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { getVideogames, filterVideogamesBySatatus } from \"../redux/actions\";\r\n// import { Link } from 'react-router-dom';\r\n// import Card from \"./Card\";\r\n// import Paginado from \"./Paginado\";\r\n\r\n// export default function Home (){\r\n\r\n// const dispatch = useDispatch()\r\n// const allVideogames = useSelector ((state) => state.allVideogames)\r\n// const [currentPage, setCurrentPage] = useState(1)\r\n// const [videogamePerPage, setVideogamePerPage] = useState (20) //Controla cuántos videojugos se muestran por página\r\n// const indexOfLastVideogame = currentPage * videogamePerPage\r\n// const indexOfFirtsVideogame = indexOfLastVideogame - videogamePerPage\r\n// const currentVideogames = allVideogames.slice(indexOfFirtsVideogame, indexOfLastVideogame)\r\n\r\n// const paginado = (pageNumber) => {\r\n//   setCurrentPage(pageNumber)\r\n// }\r\n\r\n// useEffect (() => {\r\n//   dispatch(getVideogames());\r\n// },[dispatch])\r\n\r\n// function handleClick(element){\r\n//   element.preventDefault();\r\n//   dispatch(getVideogames());\r\n// }\r\n\r\n// function handleFilterStatus(e){\r\n//   dispatch(filterVideogamesBySatatus(e.target.value))\r\n// }\r\n\r\n// function handleFilterCreated{}\r\n\r\n// return (\r\n//   <div>\r\n//     <Link to='/videogames'>Crea tu videojuego</Link>\r\n//     <h1>Mattger GAMES</h1>\r\n//    <button onClick={element => {handleClick(element)}}>\r\n//     Recargar todos los juegos\r\n//     </button>\r\n//     <div>\r\n//       <select>\r\n//         <option value=\"asc\">Ascendente</option>\r\n//         <option value=\"desc\">Descendente</option>\r\n//       </select>\r\n//       <select>\r\n//         <option value=\"rating\">Select Rating</option>\r\n//         <option value=\"least\">Menos Popular</option>\r\n//         <option value=\"more\">Más Popular</option>\r\n//       </select>\r\n//       <select onChange={e => handleFilterStatus(e)}>\r\n//         <option value=\"All\">Todos los videos juegos</option>\r\n//         <option value=\"Existente\">Existentes</option>\r\n//         <option value=\"Creados\">Creados</option>\r\n//       </select>\r\n//       <Paginado\r\n//       videogamesPerPage={videogamePerPage}\r\n//       allVideogames={allVideogames.length}\r\n//       paginado = {paginado}\r\n//       />\r\n//       {currentVideogames?.map((videogame) => {\r\n//         return (\r\n//           <div>\r\n//             <Link to={\"/home/\" + videogame.id}>\r\n//               <Card  image={videogame.image}\r\n//                         name={videogame.name}\r\n//                         rating={videogame.rating}\r\n//                         genres={videogame.genres}/>\r\n//             </Link>\r\n//           </div>\r\n//         )\r\n//       })}\r\n//     </div>\r\n//     </div>\r\n\r\n    \r\n// )\r\n// }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA"},"metadata":{},"sourceType":"module"}