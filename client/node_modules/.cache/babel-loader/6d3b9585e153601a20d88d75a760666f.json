{"ast":null,"code":"import axios from \"axios\";\nexport function getVideogames() {\n  return async function (dispatch) {\n    const json = await axios.get(\"http://localhost:3001/videogames\");\n    return dispatch({\n      type: \"GET_VIDEOGAMES\",\n      payload: json.data\n    });\n  };\n}\nexport function getNameVideogames(name) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/videogames?name=\" + name);\n      return dispatch({\n        type: \"GET_NAME_VIDEOGAMES\",\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function getGenres() {\n  return async function (dispatch) {\n    var info = await axios(\"http://localhost:3001/genres\", {});\n    return dispatch({\n      type: \"GET_GENRES\",\n      pay\n    });\n  };\n}\nexport function filterVideogamesByGenres(payload) {\n  return {\n    type: \"FILTER_BY_GENRES\",\n    payload\n  };\n}\nexport function filterCreated(payload) {\n  return {\n    type: \"FILTER_CREATED\",\n    payload\n  };\n}\nexport function orderByName(payload) {\n  return {\n    type: \"ORDER_BY_NAME\",\n    payload\n  };\n}","map":{"version":3,"names":["axios","getVideogames","dispatch","json","get","type","payload","data","getNameVideogames","name","error","console","log","getGenres","info","pay","filterVideogamesByGenres","filterCreated","orderByName"],"sources":["C:/Users/Matia/OneDrive/Escritorio/PI-Videogames-main/PI-Videogames-main/client/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport function getVideogames() {\r\n  return async function (dispatch) {\r\n    const json = await axios.get(\"http://localhost:3001/videogames\");\r\n    return dispatch({\r\n      type: \"GET_VIDEOGAMES\",\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function getNameVideogames(name) {\r\n  return async function (dispatch) {\r\n    try {\r\n      var json = await axios.get(\r\n        \"http://localhost:3001/videogames?name=\" + name\r\n      );\r\n      return dispatch({\r\n        type: \"GET_NAME_VIDEOGAMES\",\r\n        payload: json.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function getGenres(){\r\n    return async function (dispatch){\r\n        var info = await axios(\"http://localhost:3001/genres\", {\r\n\r\n        });\r\n        return dispatch({ type: \"GET_GENRES\", pay})\r\n    }\r\n}\r\n\r\nexport function filterVideogamesByGenres(payload) {\r\n  return {\r\n    type: \"FILTER_BY_GENRES\",\r\n    payload,\r\n  };\r\n}\r\nexport function filterCreated(payload) {\r\n  return {\r\n    type: \"FILTER_CREATED\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function orderByName(payload) {\r\n  return {\r\n    type: \"ORDER_BY_NAME\",\r\n    payload,\r\n  };\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC9B,OAAO,gBAAgBC,QAAQ,EAAE;IAC/B,MAAMC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,kCAAkC,CAAC;IAChE,OAAOF,QAAQ,CAAC;MACdG,IAAI,EAAE,gBAAgB;MACtBC,OAAO,EAAEH,IAAI,CAACI;IAChB,CAAC,CAAC;EACJ,CAAC;AACH;AAEA,OAAO,SAASC,iBAAiBA,CAACC,IAAI,EAAE;EACtC,OAAO,gBAAgBP,QAAQ,EAAE;IAC/B,IAAI;MACF,IAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAG,CACxB,wCAAwC,GAAGK,IAAI,CAChD;MACD,OAAOP,QAAQ,CAAC;QACdG,IAAI,EAAE,qBAAqB;QAC3BC,OAAO,EAAEH,IAAI,CAACI;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;AACH;AAEA,OAAO,SAASG,SAASA,CAAA,EAAE;EACvB,OAAO,gBAAgBX,QAAQ,EAAC;IAC5B,IAAIY,IAAI,GAAG,MAAMd,KAAK,CAAC,8BAA8B,EAAE,CAEvD,CAAC,CAAC;IACF,OAAOE,QAAQ,CAAC;MAAEG,IAAI,EAAE,YAAY;MAAEU;IAAG,CAAC,CAAC;EAC/C,CAAC;AACL;AAEA,OAAO,SAASC,wBAAwBA,CAACV,OAAO,EAAE;EAChD,OAAO;IACLD,IAAI,EAAE,kBAAkB;IACxBC;EACF,CAAC;AACH;AACA,OAAO,SAASW,aAAaA,CAACX,OAAO,EAAE;EACrC,OAAO;IACLD,IAAI,EAAE,gBAAgB;IACtBC;EACF,CAAC;AACH;AAEA,OAAO,SAASY,WAAWA,CAACZ,OAAO,EAAE;EACnC,OAAO;IACLD,IAAI,EAAE,eAAe;IACrBC;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}