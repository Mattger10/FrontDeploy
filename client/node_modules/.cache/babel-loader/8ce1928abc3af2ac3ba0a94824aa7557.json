{"ast":null,"code":"// import axios from \"axios\";\n\n// export function getVideogames() {\n//     return async function (dispatch) {\n//         try {\n//             var json = await axios.get(\"http://localhost:3001/videogames\");\n//             return dispatch({\n//                 type: \"GET_VIDEOGAMES\",\n//                 payload: json.data,\n//             });\n//         } catch (error) {\n//         }\n//     };\n// } \n\n// export function getNameVideogames(name) {\n//     return async function (dispatch){\n//         try {\n//             var json = await axios.get(`http://localhost:3001/videogames?name=${name}`);\n//             return dispatch ({\n//                 type: 'GET_NAME_VIDEOGAMES',\n//                 payload: json.data\n//             })\n//         }catch (error){;\n//         }\n//     }\n// }\n\n// export function getGenres(){\n//     return async function(dispatch){\n//         try {\n//             var info = await axios.get('http://localhost:3001/genres')\n//             return dispatch({\n//                 type: 'GET_GENRES',\n//                 payload: info.data\n//             });\n//         } catch(error){\n//         }\n//     };\n// };\n\n// export function postVideogame(payload) {\n//     return async function(dispatch){\n//         const response = await axios.post('http://localhost:3001/videogames', payload);\n//         return response; \n//     }\n// }\n\n// export function getDetail(id) {\n//     return async function (dispatch) {\n//         try {\n//             var json = await axios.get(`http://localhost:3001/videogames/${id}`);\n//             return dispatch({\n//                 type: \"GET_DETAILS\",\n//                 payload: json.data\n//             });\n//         } catch (error){\n//         }\n//     }\n// }\n\n// export function filterByGenres(payload) {\n//     return {\n//         type: \"FILTER_BY_GENRES\",\n//         payload,\n//     };\n// }\n// export function filterCreated (payload){\n//     return{\n//         type: 'FILTER_CREATED',\n//         payload\n//     }\n//   }\n\n// export function orderByRating(payload){\n//     return {\n//         type: 'OREDER_BY_NAME', payload\n//     }\n// }\n\n// export function orderByName (payload){\n//     return {\n//         type : 'ORDER_BY_NAME',\n//         payload\n//     }\n//   }\n\n// export function clear(){\n//     return{\n//         type: 'CLEAR', payload: []\n//     }\n// }\n\nimport axios from 'axios';\nexport const GET_ALL_GAMES = \"GET_ALL_GAMES\";\nexport const SORT_ALPHABETICALLY = \"SORT_ALPHABETICALLY\";\nexport const SORT_RATING = \"SORT_RATING\";\nexport const ORDER_CREATED = \"ORDER_CREATED\";\nexport const GET_GAMES_BY_NAME = \"GET_GAMES_BY_NAME\";\nexport const GET_ALL_GENRES = \"GET_ALL_GENRES\";\nexport const FILTER_GAMES_GENRE = \"FILTER_GAMES_GENRE\";\nexport const GET_GAME_DETAIL = \"GET_GAME_DETAIL\";\nexport const POST_GAME = 'POST_GAME';\nexport const GET_CLEAN = \"GET_CLEAN\";\nexport const CLEAN_GENRE = \"CLEAN_GENRE\";\nexport const CLEAN_GAMES = \"CLEAN_GAMES\";\nexport const LOADING = \"LOADING\";\nexport const LOADING_FINISH = \"LOADING_FINISH\";\nexport function getAllGames() {\n  try {\n    return async function (dispatch) {\n      var json = await axios.get(\"/videogames\");\n      return dispatch({\n        type: GET_ALL_GAMES,\n        payload: json.data\n      });\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function getAllGenres() {\n  try {\n    return async function (dispatch) {\n      let json = await axios.get('/genres');\n      return dispatch({\n        type: GET_ALL_GENRES,\n        payload: json.data\n      });\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function filterGamesGenre(payload) {\n  console.log(payload);\n  return {\n    type: FILTER_GAMES_GENRE,\n    payload\n  };\n}\nexport function orderCreated(payload) {\n  console.log(payload);\n  return {\n    type: ORDER_CREATED,\n    payload\n  };\n}\nexport function getGamesByName(name) {\n  return async function (dispatch) {\n    try {\n      dispatch({\n        type: LOADING\n      });\n      axios.get(`/videogames?name=${name}`).then(data => {\n        dispatch({\n          type: LOADING_FINISH\n        });\n        return dispatch({\n          type: GET_GAMES_BY_NAME,\n          payload: data.data\n        });\n      });\n    } catch (error) {\n      console.log(error);\n      return dispatch({\n        type: GET_GAMES_BY_NAME,\n        payload: [{\n          msg: \"Not found any games\"\n        }]\n      });\n    }\n  };\n}\nexport function getDetail(id) {\n  try {\n    return async function (dispatch) {\n      var detail = await axios.get(`/videogame/${id}`);\n      return dispatch({\n        type: GET_GAME_DETAIL,\n        payload: detail.data\n      });\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function postNewGame(payload) {\n  return async function (dispatch) {\n    var json = await axios.post(`/videogames`, payload);\n    dispatch({\n      type: POST_GAME\n    });\n    console.log(json);\n    return json;\n  };\n}\nexport function sortAlphabetically(payload) {\n  return {\n    type: SORT_ALPHABETICALLY,\n    payload\n  };\n}\nexport function cleanGenre() {\n  return {\n    type: CLEAN_GENRE\n  };\n}\nexport function cleanGames() {\n  return {\n    type: CLEAN_GAMES\n  };\n}\nexport function getClean() {\n  return {\n    type: GET_CLEAN\n  };\n}\nexport function sortByRating(payload) {\n  return {\n    type: SORT_RATING,\n    payload\n  };\n}","map":{"version":3,"names":["axios","GET_ALL_GAMES","SORT_ALPHABETICALLY","SORT_RATING","ORDER_CREATED","GET_GAMES_BY_NAME","GET_ALL_GENRES","FILTER_GAMES_GENRE","GET_GAME_DETAIL","POST_GAME","GET_CLEAN","CLEAN_GENRE","CLEAN_GAMES","LOADING","LOADING_FINISH","getAllGames","dispatch","json","get","type","payload","data","error","console","log","getAllGenres","filterGamesGenre","orderCreated","getGamesByName","name","then","msg","getDetail","id","detail","postNewGame","post","sortAlphabetically","cleanGenre","cleanGames","getClean","sortByRating"],"sources":["C:/Users/Matia/OneDrive/Escritorio/PI-Videogames-main/PI-Videogames-main/client/src/actions/index.js"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// export function getVideogames() {\r\n//     return async function (dispatch) {\r\n//         try {\r\n//             var json = await axios.get(\"http://localhost:3001/videogames\");\r\n//             return dispatch({\r\n//                 type: \"GET_VIDEOGAMES\",\r\n//                 payload: json.data,\r\n//             });\r\n//         } catch (error) {\r\n//         }\r\n//     };\r\n// } \r\n\r\n// export function getNameVideogames(name) {\r\n//     return async function (dispatch){\r\n//         try {\r\n//             var json = await axios.get(`http://localhost:3001/videogames?name=${name}`);\r\n//             return dispatch ({\r\n//                 type: 'GET_NAME_VIDEOGAMES',\r\n//                 payload: json.data\r\n//             })\r\n//         }catch (error){;\r\n//         }\r\n//     }\r\n// }\r\n\r\n// export function getGenres(){\r\n//     return async function(dispatch){\r\n//         try {\r\n//             var info = await axios.get('http://localhost:3001/genres')\r\n//             return dispatch({\r\n//                 type: 'GET_GENRES',\r\n//                 payload: info.data\r\n//             });\r\n//         } catch(error){\r\n//         }\r\n//     };\r\n// };\r\n\r\n// export function postVideogame(payload) {\r\n//     return async function(dispatch){\r\n//         const response = await axios.post('http://localhost:3001/videogames', payload);\r\n//         return response; \r\n//     }\r\n// }\r\n\r\n// export function getDetail(id) {\r\n//     return async function (dispatch) {\r\n//         try {\r\n//             var json = await axios.get(`http://localhost:3001/videogames/${id}`);\r\n//             return dispatch({\r\n//                 type: \"GET_DETAILS\",\r\n//                 payload: json.data\r\n//             });\r\n//         } catch (error){\r\n//         }\r\n//     }\r\n// }\r\n\r\n// export function filterByGenres(payload) {\r\n//     return {\r\n//         type: \"FILTER_BY_GENRES\",\r\n//         payload,\r\n//     };\r\n// }\r\n// export function filterCreated (payload){\r\n//     return{\r\n//         type: 'FILTER_CREATED',\r\n//         payload\r\n//     }\r\n//   }\r\n\r\n\r\n// export function orderByRating(payload){\r\n//     return {\r\n//         type: 'OREDER_BY_NAME', payload\r\n//     }\r\n// }\r\n\r\n// export function orderByName (payload){\r\n//     return {\r\n//         type : 'ORDER_BY_NAME',\r\n//         payload\r\n//     }\r\n//   }\r\n\r\n// export function clear(){\r\n//     return{\r\n//         type: 'CLEAR', payload: []\r\n//     }\r\n// }\r\n\r\nimport axios from 'axios';\r\nexport const GET_ALL_GAMES = \"GET_ALL_GAMES\"\r\nexport const SORT_ALPHABETICALLY = \"SORT_ALPHABETICALLY\"\r\nexport const SORT_RATING = \"SORT_RATING\"\r\nexport const ORDER_CREATED = \"ORDER_CREATED\"\r\nexport const GET_GAMES_BY_NAME = \"GET_GAMES_BY_NAME\"\r\nexport const GET_ALL_GENRES = \"GET_ALL_GENRES\"\r\nexport const FILTER_GAMES_GENRE = \"FILTER_GAMES_GENRE\"\r\nexport const GET_GAME_DETAIL = \"GET_GAME_DETAIL\"\r\nexport const POST_GAME = 'POST_GAME'\r\nexport const GET_CLEAN = \"GET_CLEAN\"\r\nexport const CLEAN_GENRE = \"CLEAN_GENRE\"\r\nexport const CLEAN_GAMES = \"CLEAN_GAMES\"\r\nexport const LOADING = \"LOADING\"\r\nexport const LOADING_FINISH = \"LOADING_FINISH\"\r\n\r\nexport function getAllGames(){\r\n    try{\r\n    return async function(dispatch){\r\n    var json = await axios.get(\"/videogames\");\r\n    return dispatch({\r\n    type: GET_ALL_GAMES,\r\n    payload: json.data\r\n    })\r\n}\r\n}catch(error){\r\n    console.log(error)\r\n}\r\n }\r\n export function getAllGenres(){\r\n     try{\r\n    return async function(dispatch){\r\n        let json = await axios.get('/genres'); \r\n                return dispatch({\r\n                type: GET_ALL_GENRES,\r\n                payload: json.data\r\n            });\r\n        }\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n }\r\n\r\n export function filterGamesGenre(payload){\r\n    console.log(payload)\r\n    return {\r\n        type: FILTER_GAMES_GENRE,\r\n        payload\r\n    }\r\n }\r\n \r\n\r\n export function orderCreated(payload){\r\n    console.log(payload)\r\n     return {\r\n         type: ORDER_CREATED,\r\n         payload\r\n     }\r\n }\r\nexport function getGamesByName(name) {\r\n    return async function (dispatch){\r\n        try{\r\n            dispatch({type: LOADING})\r\n            axios.get(`/videogames?name=${name}`).then(data => {\r\n                dispatch({type: LOADING_FINISH})\r\n                return dispatch({\r\n                    type: GET_GAMES_BY_NAME,\r\n                    payload: data.data\r\n                })\r\n            })\r\n\r\n        } catch (error){\r\n            console.log(error)\r\n            return dispatch({\r\n                type: GET_GAMES_BY_NAME,\r\n                payload: [{msg: \"Not found any games\"}]\r\n            })\r\n        }\r\n    }\r\n}\r\nexport function getDetail(id) {\r\n   try{\r\n       return async function(dispatch) {\r\n           var detail = await axios.get(`/videogame/${id}`)\r\n           return dispatch ({\r\n               type: GET_GAME_DETAIL,\r\n               payload: detail.data\r\n           })\r\n       }\r\n   } catch(error){\r\n       console.log(error)\r\n   }\r\n}\r\n\r\nexport function postNewGame(payload){\r\n    return async function(dispatch){\r\n        var json = await axios.post(`/videogames`, payload)\r\n        dispatch({\r\n            type: POST_GAME\r\n        })\r\n        console.log(json)\r\n        return json\r\n    }\r\n}\r\nexport function sortAlphabetically(payload){\r\n    return {\r\n        type: SORT_ALPHABETICALLY,\r\n        payload\r\n    }\r\n}\r\nexport function cleanGenre(){\r\n    return {\r\n        type: CLEAN_GENRE\r\n    }\r\n}\r\nexport function cleanGames(){\r\n    return {\r\n        type: CLEAN_GAMES\r\n    }\r\n}\r\nexport function getClean(){\r\n    return {\r\n        type: GET_CLEAN\r\n    }\r\n}\r\nexport function sortByRating(payload){\r\n    return {\r\n        type: SORT_RATING,\r\n        payload\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}