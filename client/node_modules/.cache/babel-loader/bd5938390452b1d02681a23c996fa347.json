{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matia\\\\OneDrive\\\\Escritorio\\\\PI-Videogames-main\\\\PI-Videogames-main\\\\client\\\\src\\\\components\\\\Paginado.jsx\";\n// import React from \"react\";\n// // IMPORTAR ESTILOS\n\n// export default function Paginado({\n//   videogamePerPage,\n//   allVideogames,\n//   paginado,\n// }) {\n//   const pageNumbers = [];\n\n//   for (let i = 1; i <= Math.ceil(allVideogames / videogamePerPage); i++) {\n//     pageNumbers.push(i);\n//   }\n//   return (\n//     <nav>\n//       <ul id=\"ul\">\n//         {pageNumbers &&\n//           pageNumbers.map((number) => (\n//             <button onClick={() => paginado(number)} key={number} id=\"pag\">\n//               {number}\n//             </button>\n//           ))}\n//       </ul>\n//     </nav>\n//   );\n// }\n\n//------------------------------------------------------------------------------------------\n\n// import React from \"react\";\n\n// export default function Paginado ({videogamePerPage, allVideogames, paginado}){\n//   const pageNumbers = []\n\n//   for ( let i = 0; i < Math.ceil(allVideogames / videogamePerPage); i++){\n//     pageNumbers.push(i+1)\n//   }\n//   return (\n//     <nav>\n//       <ul>\n//       { pageNumbers &&\n//       pageNumbers.map(number =>{\n//         return(\n//         <li className=\"number\" key={number}>\n//         <button onClick={() => paginado(number)}>{number}</button>\n//         </li>\n//       )})}\n//       </ul>\n//     </nav>\n//   )\n// }\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Paginado(_ref) {\n  let {\n    gamesPerPage,\n    allVideoGames,\n    paginado\n  } = _ref;\n  //Me creo un const que será un array vacio\n  const numberPage = [];\n  for (let i = 0; i < Math.ceil(allVideoGames / gamesPerPage); i++) {\n    //Había un error aqui, ya esta solucionado\n    //Match.ceil ==>> Devuelve el entero mayor o igual más próximo a un número dado\n    // i <= Math.ceil(100/15); ==> i <= Match.ceil(6,67) ==> i <= 7\n    numberPage.push(i + 1);\n  }\n\n  //Solución al paginado doble para el detail\n  // if(numberPage.length > allVideoGames/gamesPerPage){\n  //     numberPage.length = numberPage.length - 1;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: numberPage && numberPage.map(number => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginado(number),\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_c = Paginado;\nvar _c;\n$RefreshReg$(_c, \"Paginado\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Paginado","_ref","gamesPerPage","allVideoGames","paginado","numberPage","i","Math","ceil","push","children","map","number","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Matia/OneDrive/Escritorio/PI-Videogames-main/PI-Videogames-main/client/src/components/Paginado.jsx"],"sourcesContent":["// import React from \"react\";\r\n// // IMPORTAR ESTILOS\r\n\r\n// export default function Paginado({\r\n//   videogamePerPage,\r\n//   allVideogames,\r\n//   paginado,\r\n// }) {\r\n//   const pageNumbers = [];\r\n\r\n//   for (let i = 1; i <= Math.ceil(allVideogames / videogamePerPage); i++) {\r\n//     pageNumbers.push(i);\r\n//   }\r\n//   return (\r\n//     <nav>\r\n//       <ul id=\"ul\">\r\n//         {pageNumbers &&\r\n//           pageNumbers.map((number) => (\r\n//             <button onClick={() => paginado(number)} key={number} id=\"pag\">\r\n//               {number}\r\n//             </button>\r\n//           ))}\r\n//       </ul>\r\n//     </nav>\r\n//   );\r\n// }\r\n\r\n//------------------------------------------------------------------------------------------\r\n\r\n// import React from \"react\";\r\n\r\n// export default function Paginado ({videogamePerPage, allVideogames, paginado}){\r\n//   const pageNumbers = []\r\n\r\n//   for ( let i = 0; i < Math.ceil(allVideogames / videogamePerPage); i++){\r\n//     pageNumbers.push(i+1)\r\n//   }\r\n//   return (\r\n//     <nav>\r\n//       <ul>\r\n//       { pageNumbers &&\r\n//       pageNumbers.map(number =>{\r\n//         return(\r\n//         <li className=\"number\" key={number}>\r\n//         <button onClick={() => paginado(number)}>{number}</button>\r\n//         </li>\r\n//       )})}\r\n//       </ul>\r\n//     </nav>\r\n//   )\r\n// }\r\n\r\nimport React from \"react\";\r\n\r\nexport default function Paginado ({gamesPerPage, allVideoGames, paginado}) {\r\n    //Me creo un const que será un array vacio\r\n    const numberPage = []\r\n\r\n    for(let i = 0; i < Math.ceil(allVideoGames/gamesPerPage); i++){//Había un error aqui, ya esta solucionado\r\n        //Match.ceil ==>> Devuelve el entero mayor o igual más próximo a un número dado\r\n        // i <= Math.ceil(100/15); ==> i <= Match.ceil(6,67) ==> i <= 7\r\n        numberPage.push(i + 1)\r\n    }\r\n\r\n    //Solución al paginado doble para el detail\r\n    // if(numberPage.length > allVideoGames/gamesPerPage){\r\n    //     numberPage.length = numberPage.length - 1;\r\n    // }\r\n\r\n    return(\r\n        <nav >\r\n            <ul>\r\n                {numberPage &&\r\n                numberPage.map(number => {\r\n                    return(  \r\n                    <li key={number}>\r\n                        <button onClick={() => paginado(number)}>{number}</button>\r\n                    </li>\r\n                )})}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAA2C;EAAA,IAAzC;IAACC,YAAY;IAAEC,aAAa;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACrE;EACA,MAAMI,UAAU,GAAG,EAAE;EAErB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAACC,IAAI,CAACL,aAAa,GAACD,YAAY,CAAC,EAAEI,CAAC,EAAE,EAAC;IAAC;IAC3D;IACA;IACAD,UAAU,CAACI,IAAI,CAACH,CAAC,GAAG,CAAC,CAAC;EAC1B;;EAEA;EACA;EACA;EACA;;EAEA,oBACIP,OAAA;IAAAW,QAAA,eACIX,OAAA;MAAAW,QAAA,EACKL,UAAU,IACXA,UAAU,CAACM,GAAG,CAACC,MAAM,IAAI;QACrB,oBACAb,OAAA;UAAAW,QAAA,eACIX,OAAA;YAAQc,OAAO,EAAEA,CAAA,KAAMT,QAAQ,CAACQ,MAAM,CAAE;YAAAF,QAAA,EAAEE;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAU,GADrDL,MAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEV;MACR,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEd;AAACC,EAAA,GA5BuBlB,QAAQ;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}