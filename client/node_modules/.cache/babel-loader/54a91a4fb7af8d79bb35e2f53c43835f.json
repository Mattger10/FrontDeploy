{"ast":null,"code":"// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { postVideogame, getGenres, getVideogames } from \"../actions\";\n// import { Link, useHistory } from \"react-router-dom\";\n// //IMPORTAR ESTILOS\n\n// function CreatedVideogame() {\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   const genres = useSelector((state) => state.allgenres);\n//   const platforms = useSelector((state) => state.platforms);\n//   const allVideogames= useSelector((state) => state.allVideogames)\n//   const [errors, setErrors] = useState({});\n\n// let validateUrl = /(http(s?):)([/|.|\\w|\\s|-])*.(?:jpg|gif|png)/;\n\n// function validate(input) {\n\n//   let errors = {};\n\n//   if (!input.name.trim()) {\n//     errors.name = \"Enter a correct name\";\n//   } else if (\n//     allVideogames.find(\n//       (e) =>\n//         e.name.toLowerCase().trim() === input.name.toLocaleLowerCase().trim() //trim elimina espacios en blanco\n//     )\n//   ) {\n//     errors.name = `The ${input.name} already exists`;\n//   } else if (\n//     input.description === \"number\" ||\n//     input.description.length < 10 ||\n//     input.description.trim() === \"\"\n//   ) {\n//     errors.description = \"Enter a correct description\";\n//   } else if (input.released.trim() === \"\") {\n//     errors.released = \"Enter a date\";\n//   } else if (!input.image || !validateUrl.test(input.image)) {\n//     errors.image = \"This is not a valid URL\";\n//   } else if (input.released < \"1952- 01- 01\") {\n//     errors.released = \"The date cannot be less than 1952 - 01- 01\";\n//   } else if (input.rating === \"\" || input.rating < 1 || input.rating > 5) {\n//     errors.rating = \"Enter a rating\";\n//   } else if (input.genres.length === 0) {\n//     errors.genres = \"Select one or more genres\";\n//   } else if (input.platforms.length === 0) {\n//     errors.platforms = \"Select one or more platforms\";\n//   }\n//   return errors;\n// }\n\n//   const [input, setInput] = useState({\n//     name: \"\",\n//     image: \"\",\n//     description: \"\",\n//     released: \"\",\n//     rating: \"\",\n//     genres: [],\n//     platforms: [],\n//   });\n\n//   useEffect(() => {\n//     dispatch(getGenres());\n//     dispatch(getVideogames());\n//   }, [dispatch]);\n\n//   function handleChange(e) {\n//     setInput({\n//       ...input,\n//       [e.target.name]: e.target.value, // setea el valor del target.\n//     });\n//     setErrors(\n//       validate({\n//         ...input,\n//         [e.target.name]: e.target.value,\n//       })\n//     );\n//   }\n\n//   function handleSelectGenres(e) {\n//     setInput({\n//       ...input,\n//       genres: [...new Set([...input.genres, e.target.value])],\n//     });\n//     setErrors(\n//       validate({\n//         ...input,\n//         [e.target.name]: e.target.value,\n//       })\n//     );\n//   }\n\n//   function handleSelectPlatforms(e) {\n//     setInput({\n//       ...input,\n//       platforms: [...new Set([...input.platforms, e.target.value])],\n//     });\n//     setErrors(\n//       validate({\n//         ...input,\n//         [e.target.name]: e.target.value,\n//       })\n//     );\n//   }\n//   const handleDeleteGenres = (e) => {\n//     setInput({\n//       ...input,\n//       genres: input.genres.filter((el) => el !== e),\n//     });\n//   };\n//   const handleDeletePlatforms = (e) => {\n//     setInput({\n//       ...input,\n//       platforms: input.platforms.filter((el) => el !== e),\n//     });\n//   };\n\n//   function handleSubmit(e) {\n//     e.preventDefault();\n//     setErrors(validate(input));\n//     let error = validate(input);\n//     if (Object.values(error).length !== 0) {\n//     } else {\n//     dispatch(postVideogame(input));\n//     alert(\"A new VideoGame has been created\");\n//     setInput({\n//       name: \"\",\n//       image: \"\",\n//       description: \"\",\n//       released: \"\",\n//       rating: \"\",\n//       genres: [],\n//       platforms: [],\n//     });\n//     history.push(\"/home\");\n//   }\n// }\n\n// return (\n//   <div id=\"generalForm\">\n//     <h2 id=\"h2\">Create your Video Game</h2>\n//     <form id=\"form\" onSubmit={handleSubmit}>\n//       <div>\n//         <label id=\"label\">Name: </label>\n//         <input\n//           id=\"input\"\n//           type=\"text\"\n//           value={input.name}\n//           name=\"name\"\n//           onChange={handleChange}\n//         />\n//          {errors.name && <h4 id=\"error\">{errors.name}</h4>}\n//       </div>\n//       <div>\n//         <label id=\"label\">Image: </label>\n//         <input\n//           id=\"input\"\n//           type=\"text\"\n//           value={input.image}\n//           name=\"image\"\n//           onChange={handleChange}\n//         />\n//          {errors.image && <h4 id=\"error\">{errors.image}</h4>}\n//       </div>\n//       <div>\n//         <label id=\"label\">Released: </label>\n//         <input\n//           id=\"input\"\n//           type=\"date\"\n//           value={input.released}\n//           name=\"released\"\n//           onChange={handleChange}\n//         />\n//          {errors.released && <h4 id=\"error\">{errors.released}</h4>}\n//       </div>\n//       <div>\n//         <label id=\"label\">Rating: </label>\n//         <input\n//           id=\"input\"\n//           type=\"number\"\n//           value={input.rating}\n//           name=\"rating\"\n//           min={1}\n//           max={5}\n//           onChange={handleChange}\n//         />\n//          {errors.rating && <h4 id=\"error\">{errors.rating}</h4>}\n//       </div>\n//       <br></br>\n//       <div>\n//         <label id=\"label\">Description: </label>\n//         <textarea\n//           id=\"input\"\n//           type=\"text\"\n//           value={input.description}\n//           name=\"description\"\n//           onChange={handleChange}\n//         />\n//          {errors.description && <h4 id=\"error\">{errors.description}</h4>}\n//       </div>\n//       <div>\n//         <label id=\"label\">Genres </label>\n//         <select id=\"selectform\" onChange={(el) => handleSelectGenres(el)} defaultValue=\"default\">\n//           <option disabled selected>\n//             Select genres\n//           </option>\n//           {genres?.map((e) => (\n//             <option value={e.name} key={e.id}>\n//               {e.name}\n//             </option>\n//           ))}\n//         </select>\n//         {errors.genres && <h4 id=\"error\">{errors.genres}</h4>}\n//         <ul>\n//           {input.genres.map((e) => (\n//             <li>\n//               <div>{e + \"\"}</div>\n//               <button id=\"pag\" value={e} onClick={() => handleDeleteGenres(e)}>\n//                 x\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div>\n//         <label id=\"label\">Platforms </label>\n//         <select id=\"selectform\" onChange={(el) => handleSelectPlatforms(el)}>\n//           <option disabled selected>\n//             {\" \"}\n//             Select Platform\n//           </option>\n\n//           {platforms?.map((e) => (\n//             <option value={e} key={e.id}>\n//               {e}\n//             </option>\n//           ))}\n//         </select>\n//         {errors.platforms && <h4 id=\"error\">{errors.platforms}</h4>}\n//         <ul>\n//           {input.platforms.map((e) => (\n//             <li>\n//               <div>{e + \"\"}</div>\n//               <button\n//                 id=\"pag\"\n//                 value={e}\n//                 onClick={() => handleDeletePlatforms(e)}\n//               >\n//                 x\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       <button id=\"botonform\" type=\"submit\">\n//         Create Video Game\n//       </button>\n//       <br></br>\n//       <br></br>\n//       <div>\n//         <Link to=\"/home\">\n//           <button id=\"botonform\">Go Back Home </button>\n//         </Link>\n//       </div>\n//     </form>\n//   </div>\n// );\n// }\n\n// export default CreatedVideogame;","map":{"version":3,"names":[],"sources":["C:/Users/Matia/OneDrive/Escritorio/PI-Videogames-main/PI-Videogames-main/client/src/components/VideogameCreate.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { postVideogame, getGenres, getVideogames } from \"../actions\";\r\n// import { Link, useHistory } from \"react-router-dom\";\r\n// //IMPORTAR ESTILOS\r\n\r\n\r\n\r\n// function CreatedVideogame() {\r\n//   const dispatch = useDispatch();\r\n//   const history = useHistory();\r\n//   const genres = useSelector((state) => state.allgenres);\r\n//   const platforms = useSelector((state) => state.platforms);\r\n//   const allVideogames= useSelector((state) => state.allVideogames)\r\n//   const [errors, setErrors] = useState({});\r\n\r\n\r\n \r\n// let validateUrl = /(http(s?):)([/|.|\\w|\\s|-])*.(?:jpg|gif|png)/;\r\n\r\n// function validate(input) {\r\n\r\n//   let errors = {};\r\n\r\n//   if (!input.name.trim()) {\r\n//     errors.name = \"Enter a correct name\";\r\n//   } else if (\r\n//     allVideogames.find(\r\n//       (e) =>\r\n//         e.name.toLowerCase().trim() === input.name.toLocaleLowerCase().trim() //trim elimina espacios en blanco\r\n//     )\r\n//   ) {\r\n//     errors.name = `The ${input.name} already exists`;\r\n//   } else if (\r\n//     input.description === \"number\" ||\r\n//     input.description.length < 10 ||\r\n//     input.description.trim() === \"\"\r\n//   ) {\r\n//     errors.description = \"Enter a correct description\";\r\n//   } else if (input.released.trim() === \"\") {\r\n//     errors.released = \"Enter a date\";\r\n//   } else if (!input.image || !validateUrl.test(input.image)) {\r\n//     errors.image = \"This is not a valid URL\";\r\n//   } else if (input.released < \"1952- 01- 01\") {\r\n//     errors.released = \"The date cannot be less than 1952 - 01- 01\";\r\n//   } else if (input.rating === \"\" || input.rating < 1 || input.rating > 5) {\r\n//     errors.rating = \"Enter a rating\";\r\n//   } else if (input.genres.length === 0) {\r\n//     errors.genres = \"Select one or more genres\";\r\n//   } else if (input.platforms.length === 0) {\r\n//     errors.platforms = \"Select one or more platforms\";\r\n//   }\r\n//   return errors;\r\n// }\r\n\r\n\r\n//   const [input, setInput] = useState({\r\n//     name: \"\",\r\n//     image: \"\",\r\n//     description: \"\",\r\n//     released: \"\",\r\n//     rating: \"\",\r\n//     genres: [],\r\n//     platforms: [],\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getGenres());\r\n//     dispatch(getVideogames());\r\n//   }, [dispatch]);\r\n\r\n//   function handleChange(e) {\r\n//     setInput({\r\n//       ...input,\r\n//       [e.target.name]: e.target.value, // setea el valor del target.\r\n//     });\r\n//     setErrors(\r\n//       validate({\r\n//         ...input,\r\n//         [e.target.name]: e.target.value,\r\n//       })\r\n//     );\r\n//   }\r\n\r\n//   function handleSelectGenres(e) {\r\n//     setInput({\r\n//       ...input,\r\n//       genres: [...new Set([...input.genres, e.target.value])],\r\n//     });\r\n//     setErrors(\r\n//       validate({\r\n//         ...input,\r\n//         [e.target.name]: e.target.value,\r\n//       })\r\n//     );\r\n//   }\r\n\r\n//   function handleSelectPlatforms(e) {\r\n//     setInput({\r\n//       ...input,\r\n//       platforms: [...new Set([...input.platforms, e.target.value])],\r\n//     });\r\n//     setErrors(\r\n//       validate({\r\n//         ...input,\r\n//         [e.target.name]: e.target.value,\r\n//       })\r\n//     );\r\n//   }\r\n//   const handleDeleteGenres = (e) => {\r\n//     setInput({\r\n//       ...input,\r\n//       genres: input.genres.filter((el) => el !== e),\r\n//     });\r\n//   };\r\n//   const handleDeletePlatforms = (e) => {\r\n//     setInput({\r\n//       ...input,\r\n//       platforms: input.platforms.filter((el) => el !== e),\r\n//     });\r\n//   };\r\n\r\n//   function handleSubmit(e) {\r\n//     e.preventDefault();\r\n//     setErrors(validate(input));\r\n//     let error = validate(input);\r\n//     if (Object.values(error).length !== 0) {\r\n//     } else {\r\n//     dispatch(postVideogame(input));\r\n//     alert(\"A new VideoGame has been created\");\r\n//     setInput({\r\n//       name: \"\",\r\n//       image: \"\",\r\n//       description: \"\",\r\n//       released: \"\",\r\n//       rating: \"\",\r\n//       genres: [],\r\n//       platforms: [],\r\n//     });\r\n//     history.push(\"/home\");\r\n//   }\r\n// }\r\n\r\n// return (\r\n//   <div id=\"generalForm\">\r\n//     <h2 id=\"h2\">Create your Video Game</h2>\r\n//     <form id=\"form\" onSubmit={handleSubmit}>\r\n//       <div>\r\n//         <label id=\"label\">Name: </label>\r\n//         <input\r\n//           id=\"input\"\r\n//           type=\"text\"\r\n//           value={input.name}\r\n//           name=\"name\"\r\n//           onChange={handleChange}\r\n//         />\r\n//          {errors.name && <h4 id=\"error\">{errors.name}</h4>}\r\n//       </div>\r\n//       <div>\r\n//         <label id=\"label\">Image: </label>\r\n//         <input\r\n//           id=\"input\"\r\n//           type=\"text\"\r\n//           value={input.image}\r\n//           name=\"image\"\r\n//           onChange={handleChange}\r\n//         />\r\n//          {errors.image && <h4 id=\"error\">{errors.image}</h4>}\r\n//       </div>\r\n//       <div>\r\n//         <label id=\"label\">Released: </label>\r\n//         <input\r\n//           id=\"input\"\r\n//           type=\"date\"\r\n//           value={input.released}\r\n//           name=\"released\"\r\n//           onChange={handleChange}\r\n//         />\r\n//          {errors.released && <h4 id=\"error\">{errors.released}</h4>}\r\n//       </div>\r\n//       <div>\r\n//         <label id=\"label\">Rating: </label>\r\n//         <input\r\n//           id=\"input\"\r\n//           type=\"number\"\r\n//           value={input.rating}\r\n//           name=\"rating\"\r\n//           min={1}\r\n//           max={5}\r\n//           onChange={handleChange}\r\n//         />\r\n//          {errors.rating && <h4 id=\"error\">{errors.rating}</h4>}\r\n//       </div>\r\n//       <br></br>\r\n//       <div>\r\n//         <label id=\"label\">Description: </label>\r\n//         <textarea\r\n//           id=\"input\"\r\n//           type=\"text\"\r\n//           value={input.description}\r\n//           name=\"description\"\r\n//           onChange={handleChange}\r\n//         />\r\n//          {errors.description && <h4 id=\"error\">{errors.description}</h4>}\r\n//       </div>\r\n//       <div>\r\n//         <label id=\"label\">Genres </label>\r\n//         <select id=\"selectform\" onChange={(el) => handleSelectGenres(el)} defaultValue=\"default\">\r\n//           <option disabled selected>\r\n//             Select genres\r\n//           </option>\r\n//           {genres?.map((e) => (\r\n//             <option value={e.name} key={e.id}>\r\n//               {e.name}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//         {errors.genres && <h4 id=\"error\">{errors.genres}</h4>}\r\n//         <ul>\r\n//           {input.genres.map((e) => (\r\n//             <li>\r\n//               <div>{e + \"\"}</div>\r\n//               <button id=\"pag\" value={e} onClick={() => handleDeleteGenres(e)}>\r\n//                 x\r\n//               </button>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//       <div>\r\n//         <label id=\"label\">Platforms </label>\r\n//         <select id=\"selectform\" onChange={(el) => handleSelectPlatforms(el)}>\r\n//           <option disabled selected>\r\n//             {\" \"}\r\n//             Select Platform\r\n//           </option>\r\n\r\n//           {platforms?.map((e) => (\r\n//             <option value={e} key={e.id}>\r\n//               {e}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//         {errors.platforms && <h4 id=\"error\">{errors.platforms}</h4>}\r\n//         <ul>\r\n//           {input.platforms.map((e) => (\r\n//             <li>\r\n//               <div>{e + \"\"}</div>\r\n//               <button\r\n//                 id=\"pag\"\r\n//                 value={e}\r\n//                 onClick={() => handleDeletePlatforms(e)}\r\n//               >\r\n//                 x\r\n//               </button>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n\r\n//       <button id=\"botonform\" type=\"submit\">\r\n//         Create Video Game\r\n//       </button>\r\n//       <br></br>\r\n//       <br></br>\r\n//       <div>\r\n//         <Link to=\"/home\">\r\n//           <button id=\"botonform\">Go Back Home </button>\r\n//         </Link>\r\n//       </div>\r\n//     </form>\r\n//   </div>\r\n// );\r\n// }\r\n\r\n// export default CreatedVideogame;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}