{"ast":null,"code":"// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//     getVideogames,\n//     filterByGenres,\n//     getGenres,\n//     filterCreated,\n//     orderByRating,\n//     orderByName,\n// } from \"../actions/index\"\n// import { Link } from \"react-router-dom\";\n// import Card from \"./Card\";\n// import Paginado from \"./Paginado\";\n// import SearchBar from \"./SearchBar\";\n// import Loading from \"./Loading\";\n// import NotFound from \"./NotFound\";\n// //IMPORTAR ESTILOS\n\n// export default function Home() {\n//   const dispatch = useDispatch();\n//   const allVideogames = useSelector((state) => state.videogames);\n//   const allgenres = useSelector((state) => state.allgenres);\n//   const [loading, setLoading] = useState(true);\n//   const [setOrden] = useState(\"\");\n//   const [setOrdenRating] = useState(\"\");\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [videogamePerPage] = useState(15);\n//   const indexOfLastVideogame = currentPage * videogamePerPage;\n//   const indexOfFirtsVideogame = indexOfLastVideogame - videogamePerPage;\n//   const currentVideogame = allVideogames.slice(\n//     indexOfFirtsVideogame,\n//     indexOfLastVideogame\n//   );\n\n//   useEffect(() => {\n//     if(allVideogames.length > 0 ){\n//       setLoading(!loading)\n//     }\n//   }, [allVideogames, loading]) \n\n//   const paginado = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n\n//   if (allVideogames.length > 0 && loading) {\n//     setLoading(false);\n//   }\n\n//   useEffect(() => {\n//     console.log(\"algo\")\n//     dispatch(getVideogames());\n//     dispatch(getGenres());\n//   }, [dispatch]);\n\n//   function handleClick(element) {\n//     element.preventDefault();\n//     dispatch(getVideogames());\n//   }\n\n//   function handlePrev(element) {\n//     element.preventDefault();\n//     setCurrentPage(currentPage - 1);\n//   }\n\n//   function handleNext(element) {\n//     element.preventDefault();\n//     setCurrentPage(currentPage + 1);\n//   }\n\n//   function handleFilterGenres(element) {\n//     dispatch(filterByGenres(element.target.value));\n//     setCurrentPage(1);\n//   }\n//   function handleFilterCreated(element) {\n//     element.preventDefault();\n//     dispatch(filterCreated(element.target.value)); //PARA CREAR UN NUEVO JUEGO\n//   }\n//   function handleRating(e) {\n//     e.preventDefault();\n//     dispatch(orderByRating(e.target.value));\n//     setCurrentPage(1);\n//     setOrdenRating(e.target.value);\n//   }\n\n//   function handleSort(element) {\n//     element.preventDefault();\n//     dispatch(orderByName(element.target.value));\n//     setCurrentPage(1);\n//     setOrden(`Ordenado ${element.target.value}`);\n//   }\n//   return (\n//     <div id=\"HomeGeneral\">\n//       <h1 id=\"titulo\">Elige tu juego!</h1>\n//       <Link to=\"/videogames\">\n//         <button id=\"btnCrear\">Crear juego nuevo</button>\n//       </Link>\n//       <button\n//         id=\"recargar\"\n//         onClick={(element) => {\n//           handleClick(element);\n//         }}\n//       >\n//         Recargar juego{\" \"}\n//       </button>\n//       <div>\n//         <SearchBar />\n//         <div onChange={(element) => handleFilterGenres(element)}>\n//           <select id=\"select\">\n//             <option value=\"todos\">Todos los géneros</option>\n//             {allgenres?.map((element) => {\n//               return (\n//                 <option key={element.id} value={element.value}>\n//                   {element.name}\n//                 </option>\n//               );\n//             })}\n//           </select>\n//         </div>\n//         <select id=\"select\" onChange={(element) => handleSort(element)}>\n//           <option>Orden </option>\n//           <option value=\"asc\">Ascendente </option>\n//           <option value=\"desc\">Descendente</option>\n//         </select>\n//         <select\n//           id=\"select\"\n//           onChange={(element) => handleRating(element)}>\n//              <option>Select Rating</option>\n//           <option value=\"least\">Menos Popular</option>\n//           <option value=\"most\">Más Popular</option>\n//         </select>\n//         <select id=\"select\" onChange={(e) => handleFilterCreated(e)}>\n//           <option value=\"todos\">Todos los videos juegos</option>\n//           <option value=\"existentes\">Existente</option>\n//           <option value=\"creados\">Creados</option>\n//         </select>\n\n//         <div id=\"cardHome\">\n//           {currentVideogame?.length > 0 && !loading ? (\n//             currentVideogame?.map((element) => {\n//               return (\n//                 <Card\n//                   key={element.id}\n//                   id={element.id}\n//                   name={element.name}\n//                   image={\n//                     element.image ? element.image : element.background_image\n//                   }\n//                   genres={element.genres}\n//                   rating={element.rating}\n//                   platforms={element.platforms}\n//                   released={element.released}\n//                   description={element.description}\n//                 />\n//               );\n//             })\n//           ) : !currentVideogame.length > 0 && loading ? (\n//             <Loading />\n//           ) : (\n//             <NotFound />\n//           )}\n//         </div>\n\n//         <Paginado\n//           videogamePerPage={videogamePerPage}\n//           allVideogames={allVideogames.length}\n//           paginado={paginado}\n//           currentPage={currentPage}\n//         />\n//         <button\n//           id=\"pag\"\n//           onClick={(element) => handlePrev(element)}\n//           disabled={currentPage <= 1}\n//         >\n//           {\" \"}\n//           Prev{\" \"}\n//         </button>\n\n//         <button\n//           id=\"pag\"\n//           onClick={(element) => handleNext(element)}\n//           disabled={currentVideogame.length < 15}\n//         >\n//           {\" \"}\n//           Next{\" \"}\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Matia/OneDrive/Escritorio/PI-Videogames-main/PI-Videogames-main/client/src/components/Home.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//     getVideogames,\r\n//     filterByGenres,\r\n//     getGenres,\r\n//     filterCreated,\r\n//     orderByRating,\r\n//     orderByName,\r\n// } from \"../actions/index\"\r\n// import { Link } from \"react-router-dom\";\r\n// import Card from \"./Card\";\r\n// import Paginado from \"./Paginado\";\r\n// import SearchBar from \"./SearchBar\";\r\n// import Loading from \"./Loading\";\r\n// import NotFound from \"./NotFound\";\r\n// //IMPORTAR ESTILOS\r\n\r\n// export default function Home() {\r\n//   const dispatch = useDispatch();\r\n//   const allVideogames = useSelector((state) => state.videogames);\r\n//   const allgenres = useSelector((state) => state.allgenres);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [setOrden] = useState(\"\");\r\n//   const [setOrdenRating] = useState(\"\");\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [videogamePerPage] = useState(15);\r\n//   const indexOfLastVideogame = currentPage * videogamePerPage;\r\n//   const indexOfFirtsVideogame = indexOfLastVideogame - videogamePerPage;\r\n//   const currentVideogame = allVideogames.slice(\r\n//     indexOfFirtsVideogame,\r\n//     indexOfLastVideogame\r\n//   );\r\n\r\n//   useEffect(() => {\r\n//     if(allVideogames.length > 0 ){\r\n//       setLoading(!loading)\r\n//     }\r\n//   }, [allVideogames, loading]) \r\n\r\n//   const paginado = (pageNumber) => {\r\n//     setCurrentPage(pageNumber);\r\n//   };\r\n\r\n//   if (allVideogames.length > 0 && loading) {\r\n//     setLoading(false);\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     console.log(\"algo\")\r\n//     dispatch(getVideogames());\r\n//     dispatch(getGenres());\r\n//   }, [dispatch]);\r\n\r\n//   function handleClick(element) {\r\n//     element.preventDefault();\r\n//     dispatch(getVideogames());\r\n//   }\r\n\r\n//   function handlePrev(element) {\r\n//     element.preventDefault();\r\n//     setCurrentPage(currentPage - 1);\r\n//   }\r\n\r\n//   function handleNext(element) {\r\n//     element.preventDefault();\r\n//     setCurrentPage(currentPage + 1);\r\n//   }\r\n\r\n//   function handleFilterGenres(element) {\r\n//     dispatch(filterByGenres(element.target.value));\r\n//     setCurrentPage(1);\r\n//   }\r\n//   function handleFilterCreated(element) {\r\n//     element.preventDefault();\r\n//     dispatch(filterCreated(element.target.value)); //PARA CREAR UN NUEVO JUEGO\r\n//   }\r\n//   function handleRating(e) {\r\n//     e.preventDefault();\r\n//     dispatch(orderByRating(e.target.value));\r\n//     setCurrentPage(1);\r\n//     setOrdenRating(e.target.value);\r\n//   }\r\n\r\n//   function handleSort(element) {\r\n//     element.preventDefault();\r\n//     dispatch(orderByName(element.target.value));\r\n//     setCurrentPage(1);\r\n//     setOrden(`Ordenado ${element.target.value}`);\r\n//   }\r\n//   return (\r\n//     <div id=\"HomeGeneral\">\r\n//       <h1 id=\"titulo\">Elige tu juego!</h1>\r\n//       <Link to=\"/videogames\">\r\n//         <button id=\"btnCrear\">Crear juego nuevo</button>\r\n//       </Link>\r\n//       <button\r\n//         id=\"recargar\"\r\n//         onClick={(element) => {\r\n//           handleClick(element);\r\n//         }}\r\n//       >\r\n//         Recargar juego{\" \"}\r\n//       </button>\r\n//       <div>\r\n//         <SearchBar />\r\n//         <div onChange={(element) => handleFilterGenres(element)}>\r\n//           <select id=\"select\">\r\n//             <option value=\"todos\">Todos los géneros</option>\r\n//             {allgenres?.map((element) => {\r\n//               return (\r\n//                 <option key={element.id} value={element.value}>\r\n//                   {element.name}\r\n//                 </option>\r\n//               );\r\n//             })}\r\n//           </select>\r\n//         </div>\r\n//         <select id=\"select\" onChange={(element) => handleSort(element)}>\r\n//           <option>Orden </option>\r\n//           <option value=\"asc\">Ascendente </option>\r\n//           <option value=\"desc\">Descendente</option>\r\n//         </select>\r\n//         <select\r\n//           id=\"select\"\r\n//           onChange={(element) => handleRating(element)}>\r\n//              <option>Select Rating</option>\r\n//           <option value=\"least\">Menos Popular</option>\r\n//           <option value=\"most\">Más Popular</option>\r\n//         </select>\r\n//         <select id=\"select\" onChange={(e) => handleFilterCreated(e)}>\r\n//           <option value=\"todos\">Todos los videos juegos</option>\r\n//           <option value=\"existentes\">Existente</option>\r\n//           <option value=\"creados\">Creados</option>\r\n//         </select>\r\n\r\n//         <div id=\"cardHome\">\r\n//           {currentVideogame?.length > 0 && !loading ? (\r\n//             currentVideogame?.map((element) => {\r\n//               return (\r\n//                 <Card\r\n//                   key={element.id}\r\n//                   id={element.id}\r\n//                   name={element.name}\r\n//                   image={\r\n//                     element.image ? element.image : element.background_image\r\n//                   }\r\n//                   genres={element.genres}\r\n//                   rating={element.rating}\r\n//                   platforms={element.platforms}\r\n//                   released={element.released}\r\n//                   description={element.description}\r\n//                 />\r\n//               );\r\n//             })\r\n//           ) : !currentVideogame.length > 0 && loading ? (\r\n//             <Loading />\r\n//           ) : (\r\n//             <NotFound />\r\n//           )}\r\n//         </div>\r\n\r\n//         <Paginado\r\n//           videogamePerPage={videogamePerPage}\r\n//           allVideogames={allVideogames.length}\r\n//           paginado={paginado}\r\n//           currentPage={currentPage}\r\n//         />\r\n//         <button\r\n//           id=\"pag\"\r\n//           onClick={(element) => handlePrev(element)}\r\n//           disabled={currentPage <= 1}\r\n//         >\r\n//           {\" \"}\r\n//           Prev{\" \"}\r\n//         </button>\r\n\r\n//         <button\r\n//           id=\"pag\"\r\n//           onClick={(element) => handleNext(element)}\r\n//           disabled={currentVideogame.length < 15}\r\n//         >\r\n//           {\" \"}\r\n//           Next{\" \"}\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n"],"mappings},"metadata":{},"sourceType":"module"}