{"ast":null,"code":"// const initialState = {\n//     videogames: [],\n//     allVideogames: [],\n//     allgenres: [],\n//     platforms: [],\n//     details: {},\n// };\n\n// function rootReducer (state = initialState, action) {\n//     switch (action.type) {\n\n//         case \"GET_VIDEOGAMES\":\n//             // let platforms = [];\n//             // action.payload.map((element) => (platforms = [...platforms, ...element.platforms]));\n//             return {\n//                 ...state,\n//                 videogames: action.payload,\n//                 allVideogames: action.payload,\n//                 // platforms: Array.from(new Set(platforms)),\n//                 // page: 1,\n//             };\n\n//         case \"GET_NAME_VIDEOGAMES\":\n//             return {\n//                 ...state, \n//                 allgenres: action.payload,\n//             };\n\n//         case \"GET_DETAILS\":\n//             return {\n//                 ...state,\n//                 details: action.payload\n//             };\n\n//         case \"CLEAR\":\n//             return {\n//                 ...state,\n//                 details: action.payload\n//             }\n\n//         case \"FILTER_BY_GENRES\":\n//             const allVideogames2 = state.allVideogames;\n//             const genresFilter = action.payload === \"All\"\n//             ? allVideogames2\n//             : allVideogames2.filter((element) => element.genres.includes(action.payload));\n//         return {\n//             ...state,\n//             videogames: genresFilter,\n//         };\n\n//         case \"ORDER_BY_RATING\":\n//             const sorteArrRating = action.payload === \"least\"\n//             ? state.videogames.sort(function (a, b) {\n//                 if (a.rating > b.rating) {\n//                     return 1;\n//                 }\n//                 if (b.rating > a.rating) {\n//                     return -1;\n//                 }\n//                 return 0;\n//             })\n//             : state.videogames.sort(function (a, b) {\n//                 if (a.rating > b.rating) {\n//                     return -1;\n//                 }\n//                 if (b.rating > a.rating) {\n//                     return 1;\n//                 }\n//                 return 0;\n//             });\n//             return {\n//                 ...state,\n//                 videogames: sorteArrRating,\n//             };\n\n//             case \"ORDER_BY_NAME\":\n//                 let sortedArr = \n//                 action.payload === 'asc'\n//                 ? state.videogames.sort(function (a, b) {\n//                     if (a.name.toLowerCase() > b.name.toLowerCase()) {\n//                         return 1;\n//                     }\n//                     if (b.name.toLowerCase() > a.name.toLowerCase()){\n//                         return -1;\n//                     }\n//                     return 0;\n//                 })\n//                 : state.videogames.sort(function (a, b) {\n//                     if(a.name.toLowerCase() > b.name.toLowerCase()){\n//                         return -1;\n//                     }\n//                     if (b.name.toLowerCase() > a.name.toLowerCase()){\n//                         return 1;\n//                     }\n//                     return 0;\n//                 });\n//                 return {\n//                     ...state,\n//                     videogames: sortedArr,\n//                 };\n\n//                 default: return state;\n//     }\n// }\n\n// export default rootReducer;\n\nconst initialState = {\n  videogames: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GET_VIDEOGAMES':\n      return {\n        ...state,\n        videogames: action.payload\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","videogames","rootReducer","state","arguments","length","undefined","action","type","payload"],"sources":["C:/Users/Matia/OneDrive/Escritorio/PI-Videogames-main/PI-Videogames-main/client/src/redux/reducer/index.js"],"sourcesContent":["// const initialState = {\r\n//     videogames: [],\r\n//     allVideogames: [],\r\n//     allgenres: [],\r\n//     platforms: [],\r\n//     details: {},\r\n// };\r\n\r\n// function rootReducer (state = initialState, action) {\r\n//     switch (action.type) {\r\n\r\n//         case \"GET_VIDEOGAMES\":\r\n//             // let platforms = [];\r\n//             // action.payload.map((element) => (platforms = [...platforms, ...element.platforms]));\r\n//             return {\r\n//                 ...state,\r\n//                 videogames: action.payload,\r\n//                 allVideogames: action.payload,\r\n//                 // platforms: Array.from(new Set(platforms)),\r\n//                 // page: 1,\r\n//             };\r\n\r\n//         case \"GET_NAME_VIDEOGAMES\":\r\n//             return {\r\n//                 ...state, \r\n//                 allgenres: action.payload,\r\n//             };\r\n\r\n//         case \"GET_DETAILS\":\r\n//             return {\r\n//                 ...state,\r\n//                 details: action.payload\r\n//             };\r\n        \r\n//         case \"CLEAR\":\r\n//             return {\r\n//                 ...state,\r\n//                 details: action.payload\r\n//             }\r\n        \r\n//         case \"FILTER_BY_GENRES\":\r\n//             const allVideogames2 = state.allVideogames;\r\n//             const genresFilter = action.payload === \"All\"\r\n//             ? allVideogames2\r\n//             : allVideogames2.filter((element) => element.genres.includes(action.payload));\r\n//         return {\r\n//             ...state,\r\n//             videogames: genresFilter,\r\n//         };\r\n\r\n//         case \"ORDER_BY_RATING\":\r\n//             const sorteArrRating = action.payload === \"least\"\r\n//             ? state.videogames.sort(function (a, b) {\r\n//                 if (a.rating > b.rating) {\r\n//                     return 1;\r\n//                 }\r\n//                 if (b.rating > a.rating) {\r\n//                     return -1;\r\n//                 }\r\n//                 return 0;\r\n//             })\r\n//             : state.videogames.sort(function (a, b) {\r\n//                 if (a.rating > b.rating) {\r\n//                     return -1;\r\n//                 }\r\n//                 if (b.rating > a.rating) {\r\n//                     return 1;\r\n//                 }\r\n//                 return 0;\r\n//             });\r\n//             return {\r\n//                 ...state,\r\n//                 videogames: sorteArrRating,\r\n//             };\r\n\r\n//             case \"ORDER_BY_NAME\":\r\n//                 let sortedArr = \r\n//                 action.payload === 'asc'\r\n//                 ? state.videogames.sort(function (a, b) {\r\n//                     if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n//                         return 1;\r\n//                     }\r\n//                     if (b.name.toLowerCase() > a.name.toLowerCase()){\r\n//                         return -1;\r\n//                     }\r\n//                     return 0;\r\n//                 })\r\n//                 : state.videogames.sort(function (a, b) {\r\n//                     if(a.name.toLowerCase() > b.name.toLowerCase()){\r\n//                         return -1;\r\n//                     }\r\n//                     if (b.name.toLowerCase() > a.name.toLowerCase()){\r\n//                         return 1;\r\n//                     }\r\n//                     return 0;\r\n//                 });\r\n//                 return {\r\n//                     ...state,\r\n//                     videogames: sortedArr,\r\n//                 };\r\n\r\n//                 default: return state;\r\n//     }\r\n// }\r\n\r\n\r\n// export default rootReducer;\r\n\r\n\r\nconst initialState = {\r\n    videogames: []\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type){\r\n        case 'GET_VIDEOGAMES':\r\n            return {\r\n                ...state,\r\n                videogames: action.payload\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;;AAGA,MAAMA,YAAY,GAAG;EACjBC,UAAU,EAAE;AAChB,CAAC;AAED,SAASC,WAAWA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGL,KAAK;QACRF,UAAU,EAAEM,MAAM,CAACE;MACvB,CAAC;IACD;MACI,OAAON,KAAK;EAAC;AAE7B;AAEA,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}