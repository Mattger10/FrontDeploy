{"ast":null,"code":"import axios from \"axios\";\nexport function getVideogames() {\n  return async function (dispatch) {\n    const json = await axios.get(\"http://localhost:3001/videogames\");\n    return dispatch({\n      type: \"GET_VIDEOGAMES\",\n      payload: json.data\n    });\n  };\n}\nexport function getNameVideogames(name) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/videogames?name=\" + name);\n      return dispatch({\n        type: \"GET_NAME_VIDEOGAMES\",\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\n// GET que se utiliza para el formulario de crear un nuevo videojuego\nexport function getPlatforms() {\n  return async function (dispatch) {\n    var info = await axios.get(\"http://localhost:3001/platforms\", {});\n    return dispatch({\n      type: \"GET_PLATFORMS\",\n      payload: info.data\n    });\n  };\n}\nexport function getGenres() {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/genres\");\n      //console.log(json.data);\n      return dispatch({\n        type: \"GET_GENRES\",\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\n// POST que se utiliza para el formulario de crear un nuevo videojuego\nexport function postVideogames(payload) {\n  return async function (dispatch) {\n    const response = await axios.post(\"http://localhost:3001/videogames\", payload);\n    console.log(response);\n    return response;\n  };\n}\nexport function filterVideogamesByGenres(payload) {\n  return {\n    type: \"FILTER_BY_GENRES\",\n    payload\n  };\n}\nexport function filterCreated(payload) {\n  return {\n    type: \"FILTER_CREATED\",\n    payload\n  };\n}\nexport function orderByName(payload) {\n  return {\n    type: \"ORDER_BY_NAME\",\n    payload\n  };\n}\nexport function orderByRating(payload) {\n  return {\n    type: \"ORDER_BY_RATING\",\n    payload\n  };\n}\nexport const getDetailById = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: \"LOADING\"\n      });\n      const gameId = await axios.get(`/videogames/${id}`);\n      return dispatch({\n        type: \"GET_DETAIL_ID\",\n        payload: gameId.data\n      });\n    } catch (error) {\n      alert(error.response.data.error);\n    }\n  };\n};","map":{"version":3,"names":["axios","getVideogames","dispatch","json","get","type","payload","data","getNameVideogames","name","error","console","log","getPlatforms","info","getGenres","postVideogames","response","post","filterVideogamesByGenres","filterCreated","orderByName","orderByRating","getDetailById","id","gameId","alert"],"sources":["C:/Users/Matia/OneDrive/Escritorio/PI-Videogames-main/PI-Videogames-main/client/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport function getVideogames() {\r\n  return async function (dispatch) {\r\n    const json = await axios.get(\"http://localhost:3001/videogames\");\r\n    return dispatch({\r\n      type: \"GET_VIDEOGAMES\",\r\n      payload: json.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport function getNameVideogames(name) {\r\n  return async function (dispatch) {\r\n    try {\r\n      var json = await axios.get(\r\n        \"http://localhost:3001/videogames?name=\" + name\r\n      );\r\n      return dispatch({\r\n        type: \"GET_NAME_VIDEOGAMES\",\r\n        payload: json.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\n// GET que se utiliza para el formulario de crear un nuevo videojuego\r\nexport function getPlatforms(){\r\n    return async function(dispatch) {\r\n            var info = await axios.get(\"http://localhost:3001/platforms\", {\r\n            });\r\n            return dispatch({\r\n                type: \"GET_PLATFORMS\",\r\n                payload: info.data\r\n            });\r\n        };\r\n    }\r\n\r\n    export function getGenres(){\r\n      return async function(dispatch){\r\n          try {\r\n              var json = await axios.get(\"http://localhost:3001/genres\");\r\n              //console.log(json.data);\r\n              return dispatch({\r\n                  type: \"GET_GENRES\",\r\n                  payload: json.data\r\n              })\r\n          } catch (error) {\r\n              console.log(error)\r\n          }\r\n      }\r\n  }\r\n  \r\n\r\n\r\n// POST que se utiliza para el formulario de crear un nuevo videojuego\r\nexport function postVideogames(payload){\r\n    return async function(dispatch){\r\n            const response = await axios.post(\"http://localhost:3001/videogames\", payload);\r\n            console.log(response);\r\n            return response;\r\n        } \r\n    }\r\n\r\n\r\nexport function filterVideogamesByGenres(payload) {\r\n  return {\r\n    type: \"FILTER_BY_GENRES\",\r\n    payload,\r\n  };\r\n}\r\nexport function filterCreated(payload) {\r\n  return {\r\n    type: \"FILTER_CREATED\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function orderByName(payload) {\r\n  return {\r\n    type: \"ORDER_BY_NAME\",\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function orderByRating(payload){\r\n  return{\r\n      type: \"ORDER_BY_RATING\",\r\n      payload,\r\n  }\r\n}\r\n\r\nexport const getDetailById = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: \"LOADING\" });\r\n      const gameId = await axios.get(`/videogames/${id}`);\r\n      return dispatch({ type: \"GET_DETAIL_ID\", payload: gameId.data });\r\n    } catch (error) {\r\n      alert(error.response.data.error);\r\n    }\r\n  };\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC9B,OAAO,gBAAgBC,QAAQ,EAAE;IAC/B,MAAMC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,kCAAkC,CAAC;IAChE,OAAOF,QAAQ,CAAC;MACdG,IAAI,EAAE,gBAAgB;MACtBC,OAAO,EAAEH,IAAI,CAACI;IAChB,CAAC,CAAC;EACJ,CAAC;AACH;AAEA,OAAO,SAASC,iBAAiBA,CAACC,IAAI,EAAE;EACtC,OAAO,gBAAgBP,QAAQ,EAAE;IAC/B,IAAI;MACF,IAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAG,CACxB,wCAAwC,GAAGK,IAAI,CAChD;MACD,OAAOP,QAAQ,CAAC;QACdG,IAAI,EAAE,qBAAqB;QAC3BC,OAAO,EAAEH,IAAI,CAACI;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;AACH;;AAEA;AACA,OAAO,SAASG,YAAYA,CAAA,EAAE;EAC1B,OAAO,gBAAeX,QAAQ,EAAE;IACxB,IAAIY,IAAI,GAAG,MAAMd,KAAK,CAACI,GAAG,CAAC,iCAAiC,EAAE,CAC9D,CAAC,CAAC;IACF,OAAOF,QAAQ,CAAC;MACZG,IAAI,EAAE,eAAe;MACrBC,OAAO,EAAEQ,IAAI,CAACP;IAClB,CAAC,CAAC;EACN,CAAC;AACL;AAEA,OAAO,SAASQ,SAASA,CAAA,EAAE;EACzB,OAAO,gBAAeb,QAAQ,EAAC;IAC3B,IAAI;MACA,IAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,8BAA8B,CAAC;MAC1D;MACA,OAAOF,QAAQ,CAAC;QACZG,IAAI,EAAE,YAAY;QAClBC,OAAO,EAAEH,IAAI,CAACI;MAClB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;AACL;;AAIF;AACA,OAAO,SAASM,cAAcA,CAACV,OAAO,EAAC;EACnC,OAAO,gBAAeJ,QAAQ,EAAC;IACvB,MAAMe,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,kCAAkC,EAAEZ,OAAO,CAAC;IAC9EK,OAAO,CAACC,GAAG,CAACK,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACnB,CAAC;AACL;AAGJ,OAAO,SAASE,wBAAwBA,CAACb,OAAO,EAAE;EAChD,OAAO;IACLD,IAAI,EAAE,kBAAkB;IACxBC;EACF,CAAC;AACH;AACA,OAAO,SAASc,aAAaA,CAACd,OAAO,EAAE;EACrC,OAAO;IACLD,IAAI,EAAE,gBAAgB;IACtBC;EACF,CAAC;AACH;AAEA,OAAO,SAASe,WAAWA,CAACf,OAAO,EAAE;EACnC,OAAO;IACLD,IAAI,EAAE,eAAe;IACrBC;EACF,CAAC;AACH;AAEA,OAAO,SAASgB,aAAaA,CAAChB,OAAO,EAAC;EACpC,OAAM;IACFD,IAAI,EAAE,iBAAiB;IACvBC;EACJ,CAAC;AACH;AAEA,OAAO,MAAMiB,aAAa,GAAIC,EAAE,IAAK;EACnC,OAAO,MAAOtB,QAAQ,IAAK;IACzB,IAAI;MACFA,QAAQ,CAAC;QAAEG,IAAI,EAAE;MAAU,CAAC,CAAC;MAC7B,MAAMoB,MAAM,GAAG,MAAMzB,KAAK,CAACI,GAAG,CAAE,eAAcoB,EAAG,EAAC,CAAC;MACnD,OAAOtB,QAAQ,CAAC;QAAEG,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAEmB,MAAM,CAAClB;MAAK,CAAC,CAAC;IAClE,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdgB,KAAK,CAAChB,KAAK,CAACO,QAAQ,CAACV,IAAI,CAACG,KAAK,CAAC;IAClC;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}